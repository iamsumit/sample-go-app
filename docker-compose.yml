version: '3'
services:
  sample_migrator:
    image: flyway/flyway:10.1
    container_name: sample_flyway
    command: -url=jdbc:mysql://db/sample_db?allowPublicKeyRetrieval=true -user=user -password=password -connectRetries=60 -connectRetriesInterval=2 migrate
    volumes:
      - ./data/migrations/sample:/flyway/sql
  
  activity_migrator:
    image: flyway/flyway:10.1
    container_name: activity_flyway
    command: -url=jdbc:postgresql://activitydb/activity_db?allowPublicKeyRetrieval=true -user=user -password=password -connectRetries=60 -connectRetriesInterval=2 migrate
    volumes:
      - ./data/migrations/activity:/flyway/sql

  db:
    platform: linux/x86_64
    image: mysql:8
    container_name: sample_db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: sample_db
    networks:
      - default
    volumes:
      - ./build/mysql/lib:/var/lib/mysql
    ports:
      - "8086:3306"

  activitydb:
    platform: linux/x86_64
    image: postgres:16
    container_name: activity_db
    environment:
      MYSQL_ROOT_PASSWORD: root
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: activity_db
    networks:
      - default
    volumes:
      - ./build/postgresql/lib:/var/lib/postgresql
    ports:
      - "8087:5432"

  pubsub:
    image: google/cloud-sdk
    container_name: sample_pubsub
    command: gcloud beta emulators pubsub start --quiet --host-port=0.0.0.0:8085
    environment:
      - PUBSUB_PROJECT_ID=sample-go-app
    ports:
      - "8085:8085"
    networks:
      - default
    extra_hosts:
      - "host.docker.internal:host-gateway"

  grafana:
    image: grafana/grafana-enterprise
    container_name: sample_grafana
    ports:
      - "3000:3000"
    volumes:
      - "./build/grafana/lib:/var/lib/grafana"
    networks:
      - default
    depends_on:
      prometheus:
        condition: service_started
      jaeger:
        condition: service_started

  prometheus:
    image: prom/prometheus
    container_name: sample_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./build/prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      sample:
        condition: service_started
    networks:
      - default
    links:
      - sample

  jaeger:
    image: jaegertracing/all-in-one
    container_name: sample_jaeger
    ports:
      - "16686:16686"
      - "4318:4318"
    environment:
      - COLLECTOR_OTLP_ENABLED=true

  sample:
    build:
      context: ./
      dockerfile: Dockerfile.sample
    container_name: sample_app
    ports:
      - "8080:8080"
    volumes:
      - ./:/app
    links:
      - db
      - jaeger
    networks:
      - default
    depends_on:
      db:
        condition: service_started
      jaeger:
        condition: service_started
  
  activity:
    build:
      context: ./
      dockerfile: Dockerfile.activity
    container_name: activity_app
    ports:
      - "8081:8080"
    volumes:
      - ./:/app
    links:
      - activitydb
      - jaeger
    networks:
      - default
    depends_on:
      db:
        condition: service_started
      jaeger:
        condition: service_started

  traefik:
    image: traefik:v2.10
    container_name: sample_traefik
    command:
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.http=true"
      - "--entrypoints.web.address=:80"
      - "--log.level=INFO"
    ports:
      - "80:80"
      - "8082:8080"
    networks:
      - default
    volumes:
      - ./build/traefik/traefik.yml:/etc/traefik/traefik.yml
      - ./build/traefik/http.yml:/etc/traefik/config/http.yml
