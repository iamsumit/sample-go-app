---
# yaml-language-server: $schema=https://json.schemastore.org/taskfile.json
version: 3

includes:
  docker: ./helper/docker.yml
  go: ./helper/golang.yml
  prometheus: ./service/prometheus.yml
  jaeger: ./service/jaeger.yml
  grafana: ./service/grafana.yml
  db: ./service/db.yml

tasks:
  init:
    desc: "Setup the environment variables."
    status:
      - test -f .env
    cmds:
      - cp .env.sample .env
    dir: '{{ .SAMPLE_APP_DIR }}'

  migrate:
    desc: "Migrate the sample application's database."
    deps:
      - task: db:up
    cmds:
      - task: docker:up
        vars:
          SERVICE_NAME: sample_migrator

  generate:docs:
    desc: "Generate the swagger documentation for the sample application."
    cmds:
      - swagger generate spec -o {{ .DOCS_DIR }}/v1/swagger.json --scan-models
      - swagger generate spec -o {{ .DOCS_DIR }}/v1/swagger.json -o {{ .DOCS_DIR }}/v1/swagger.yml
      - swagger generate markdown --spec={{ .DOCS_DIR }}/v1/swagger.yml --output {{ .DOCS_DIR }}/v1/api.md
    vars:
      DOCS_DIR: ./docs/swagger
    dir: '{{ .SAMPLE_APP_DIR }}'

  up:
    desc: "Start the sample application."
    cmds:
      - task: docker:up
        vars:
          SERVICE_NAME: sample

  down:
    desc: "Stop the sample application."
    cmds:
      - task: docker:down
        vars:
          SERVICE_NAME: sample

  restart:
    desc: "Restart the sample application."
    cmds:
      - task: docker:restart
        vars:
          SERVICE_NAME: sample

  go-checks:
    desc: "To run all the code checks for the sample application."
    cmds:
      - task: go:vet
        vars:
          GO_PROJECT_FOLDER: '{{ .SAMPLE_APP_DIR }}'
      - task: go:lint
        vars:
          GO_PROJECT_FOLDER: '{{ .SAMPLE_APP_DIR }}'
    dir: '{{ .SAMPLE_APP_DIR }}'

  run-local:
    desc: "Start the sample application locally. For docker internals only."
    dotenv: [.env]
    cmds:
      - go run main.go
    dir: '{{ .SAMPLE_APP_DIR }}'

  start:
    desc: "Start the sample application and its dependent services."
    dotenv: ['.env']
    cmds:
      - task: db:up
      - task: jaeger:up
      - task: grafana:up
      - task: up
      - task: prometheus:up
    dir: '{{ .SAMPLE_APP_DIR }}'

  stop:
    desc: "Stop the sample application and its dependent services."
    dotenv: ['.env']
    cmds:
      - task: down
      - task: db:down
      - task: grafana:down
      - task: prometheus:down
      - task: jaeger:down
    dir: '{{ .SAMPLE_APP_DIR }}'
